package de.fhkiel.pepper.cms_lib.apps;

import android.util.Log;

import java.util.ArrayList;
import java.util.HashMap;

import de.fhkiel.pepper.cms_lib.repository.PepperCMSRepository;

/**
 * Interface for an app to implement. Allows callbacks generated by cms system.
 */
public interface PepperAppInterface {

    /**
     * Callback, {@link PepperCMSControllerInterface} uses, if {@link PepperApp}s are loaded.
     *
     * @param apps List of loaded available {@link PepperApp}s
     */
    void onPepperAppsLoaded(HashMap<String, PepperApp> apps, boolean isRemote);

    /**
     * Called, if app will be started
     * @param app   {@link PepperApp} that is started
     */
    void onAppStarted(PepperApp app);

    /**
     * Called if an update for a {@link PepperApp} is available
     * @param app   {@link PepperApp} update is available for.
     */
    void onAppUpdateAvailable(PepperApp app);

    /**
     * Called if app update starts
     * @param app   {@link PepperApp} app updated is started for.
     */
    void onAppUpdate(PepperApp app);

    /**
     * Called if {@link PepperApp} is updated.
     * @param app   {@link PepperApp} that is updated.
     */
    void onAppUpdated(PepperApp app);

    /**
     * Called if query on {@link PepperCMSRepository} fails with an {@link Exception}.
     * @param repository    {@link PepperCMSRepository} that causes the failure.
     * @param e             {@link Exception} that was raised.
     */
    void onRepositoryError(PepperCMSRepository repository, Exception e);

    /**
     * Called if number of executed background tasks from CMS changed
     * @param threads   {@link ArrayList} of running threads
     * @param newThread {@link Thread} if new thread was started, null otherwise
     */
    void onPendingTasksChanged(ArrayList<Thread> threads, Thread newThread);

}
